{"version":3,"file":"commonHelpers.js","sources":["../src/index.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport axios from 'axios';\n\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\naxios.defaults.headers = ['Access-Control-Allow-Origin'];\nconst API_KEY = '44478278-1149efa35d94f549e3de6ad11';\n\nconst form = document.querySelector('.search-form');\nconst resultContainer = document.getElementById('results');\nconst scrollAnchor = document.getElementById('scroll-anchor');\nlet totalHits = 0;\nlet page = 1;\nlet searchQuery;\nlet simpleLightbox;\n\nconst displaMessage = (type, title) => {\n  const bgColor = type === 'warning' ? 'orange' : 'green';\n  iziToast.show({\n    title: title,\n    backgroundColor: bgColor,\n    titleColor: 'white',\n    position: 'topRight',\n  });\n};\n\nconst loadImages = async (query, pageNum) => {\n  try {\n    const response = await axios.get('', {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        per_page: 40,\n        page: pageNum,\n      },\n    });\n    const results = response.data.hits;\n    totalHits = response.data.totalHits;\n    console.log(results);\n\n    if (results.length === 0) {\n      displaMessage(\n        'warning',\n        'Sorry, there are not images matching your search query. Please try again'\n      );\n      return;\n    }\n\n    const imageCards = results\n      .map(hit => {\n        return `<div class=\"image-card\">\n            <a class=\"gallery-link\" href=\"${hit.largeImageURL}\">\n            <img\n            src=\"${hit.previewURL}\"\n            alt=\"${hit.tags}\"\n            />\n            </a>\n            <div class=\"image-metadata\">\n            <div class=\"metadata\">\n            <p class=\"label\">Likes</p>\n            <p>${hit.likes}</p>\n            </div>\n            <div class=\"metadata\">\n            <p class=\"label\">Views</p>\n            <p>${hit.views}</p>\n            </div>\n            <div class=\"metadata\">\n            <p class=\"label\">Comments</p>\n            <p>${hit.comments}</p>\n            </div>\n            <div class=\"metadata\">\n            <p class=\"label\">Downloads</p>\n            <p>${hit.downloads}</p>\n            </div>\n            </div>\n            </div>`;\n      })\n      .join('');\n    resultContainer.innerHTML += imageCards;\n\n    if (!simpleLightbox) {\n      simpleLightbox = new SimpleLightbox('.gallery-link', {\n        captionsData: 'alt',\n        captionDelay: 100,\n        close: false,\n        showCounter: false,\n        animationSlide: false,\n        fadeSpeed: 250,\n      });\n    } else {\n      simpleLightbox.refresh();\n    }\n  } catch (error) {\n    console.error('Error getting the data from Pixabay: ', error);\n    iziToast.error({\n      title: Error,\n      message: 'Failed to fetch data, please try again',\n      position: 'topRight',\n    });\n  }\n};\n\nconst observer = new IntersectionObserver(\n  entries => {\n    if (entries[0].isIntersecting) {\n      if (resultContainer.childElementCount + 40 >= totalHits) {\n        displaMessage(\n          'warning',\n          'You have reached the end of the search results'\n        );\n        observer.unobserve(scrollAnchor);\n      } else {\n        page++;\n        loadImages(searchQuery, page);\n      }\n    }\n  },\n  {\n    root: null,\n    rootMargin: '0px',\n    threshold: 1.0,\n  }\n);\n\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n  observer.unobserve(scrollAnchor);\n\n  const formData = new FormData(form);\n  searchQuery = formData.get('searchQuery');\n  page = 1;\n\n  if (searchQuery) {\n    resultContainer.innerHTML = '';\n    await loadImages(searchQuery, page);\n    if (totalHits > 0) {\n      displaMessage(\n        'success',\n        `Hooray! We found ${totalHits} images for your search`\n      );\n      observer.observe(scrollAnchor);\n    }\n  } else {\n    displaMessage('warning', 'Please enter the search query');\n  }\n});\n"],"names":["axios","API_KEY","form","resultContainer","scrollAnchor","totalHits","page","searchQuery","simpleLightbox","displaMessage","type","title","bgColor","iziToast","loadImages","query","pageNum","response","results","imageCards","hit","SimpleLightbox","error","observer","entries","event"],"mappings":"owBAOAA,EAAM,SAAS,QAAU,2BACzBA,EAAM,SAAS,QAAU,CAAC,6BAA6B,EACvD,MAAMC,EAAU,qCAEVC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAkB,SAAS,eAAe,SAAS,EACnDC,EAAe,SAAS,eAAe,eAAe,EAC5D,IAAIC,EAAY,EACZC,EAAO,EACPC,EACAC,EAEJ,MAAMC,EAAgB,CAACC,EAAMC,IAAU,CACrC,MAAMC,EAAUF,IAAS,UAAY,SAAW,QAChDG,EAAS,KAAK,CACZ,MAAOF,EACP,gBAAiBC,EACjB,WAAY,QACZ,SAAU,UACd,CAAG,CACH,EAEME,EAAa,MAAOC,EAAOC,IAAY,CAC3C,GAAI,CACF,MAAMC,EAAW,MAAMjB,EAAM,IAAI,GAAI,CACnC,OAAQ,CACN,IAAKC,EACL,EAAGc,EACH,WAAY,QACZ,SAAU,GACV,KAAMC,CACP,CACP,CAAK,EACKE,EAAUD,EAAS,KAAK,KAI9B,GAHAZ,EAAYY,EAAS,KAAK,UAC1B,QAAQ,IAAIC,CAAO,EAEfA,EAAQ,SAAW,EAAG,CACxBT,EACE,UACA,0EACR,EACM,MACD,CAED,MAAMU,EAAaD,EAChB,IAAIE,GACI;AAAA,4CAC6BA,EAAI,aAAa;AAAA;AAAA,mBAE1CA,EAAI,UAAU;AAAA,mBACdA,EAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMVA,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA,iBAITA,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA,iBAITA,EAAI,QAAQ;AAAA;AAAA;AAAA;AAAA,iBAIZA,EAAI,SAAS;AAAA;AAAA;AAAA,mBAIvB,EACA,KAAK,EAAE,EACVjB,EAAgB,WAAagB,EAExBX,EAUHA,EAAe,QAAO,EATtBA,EAAiB,IAAIa,EAAe,gBAAiB,CACnD,aAAc,MACd,aAAc,IACd,MAAO,GACP,YAAa,GACb,eAAgB,GAChB,UAAW,GACnB,CAAO,CAIJ,OAAQC,EAAO,CACd,QAAQ,MAAM,wCAAyCA,CAAK,EAC5DT,EAAS,MAAM,CACb,MAAO,MACP,QAAS,yCACT,SAAU,UAChB,CAAK,CACF,CACH,EAEMU,EAAW,IAAI,qBACnBC,GAAW,CACLA,EAAQ,CAAC,EAAE,iBACTrB,EAAgB,kBAAoB,IAAME,GAC5CI,EACE,UACA,gDACV,EACQc,EAAS,UAAUnB,CAAY,IAE/BE,IACAQ,EAAWP,EAAaD,CAAI,GAGjC,EACD,CACE,KAAM,KACN,WAAY,MACZ,UAAW,CACZ,CACH,EAEAJ,EAAK,iBAAiB,SAAU,MAAMuB,GAAS,CAC7CA,EAAM,eAAc,EACpBF,EAAS,UAAUnB,CAAY,EAG/BG,EADiB,IAAI,SAASL,CAAI,EACX,IAAI,aAAa,EACxCI,EAAO,EAEHC,GACFJ,EAAgB,UAAY,GAC5B,MAAMW,EAAWP,EAAaD,CAAI,EAC9BD,EAAY,IACdI,EACE,UACA,oBAAoBJ,CAAS,yBACrC,EACMkB,EAAS,QAAQnB,CAAY,IAG/BK,EAAc,UAAW,+BAA+B,CAE5D,CAAC"}